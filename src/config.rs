use config::{ Config, ConfigError };
use std::path::Path;

pub fn config_load(config_path: &Path) -> Result<Config, ConfigError> {
    let mut builder = Config::builder()
        .set_default("host", "127.0.0.1")?
        .set_default("port", "8080")?
        .set_default("datapath", "./data")?
        .set_default("autosearch", "true")?;

    if config_path.exists() {
        builder = builder.add_source(config::File::with_name(config_path.to_str().unwrap()));
    }

    let config = builder.build()?;

    Ok(config)
}

pub fn showlogo() {
    println!(
        "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    );
    println!(
        "@@@@@@@@@@@@****^^*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    );
    println!(
        "@@@@@@@@^.vaaa1aaa.-^^^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    );
    println!(
        "@@@@@ ^^~a^^^^^^^ aaa@^^^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@@@@@@@@@@@@@@@@@@@@@**@@@@@@@@@@@@@@"
    );
    println!(
        "@@@@^^^*aaaaaa.^^^ aaa ^^^@@@@@@@****@@@@@@@@***@@@@@@@@@@@@@@**@@@@@@@@@@@@@@@@@@@@@@**@@@@@@@@@@@@@@"
    );
    println!(
        "@@@*^*^^ aaaaa ^^^ aaa *aaa@@@@@@****@@@@@@@****@@@@@@^*@@@@@@**@@@@@@***@@@@@@@@@^*@@**@@@@@@@@@@@@@@"
    );
    println!(
        "@@@^^*^^^^*^*^^^^.aaaa ^^+*@@@@@@**@**@@@@@**@**@@@***@@@**@@@**@@@***@@@***@@@***@@****@@**@@@@ **@@@"
    );
    println!(
        "@@@^^^^^^^^^^^^^+aaaa ^^^*^@@@@@@**@@**@@@**@@**@@@**@@@@@**@@**@@**@@@@@@**@@**@@@@@@**@@@**@@@**@@@@"
    );
    println!(
        "@@@^^*^^^^^^^^^ aaaa +aau^^@@@@@@**@@@**@**@@@**@@***@@@@@@@@@**@@**@@@@@@**@@**@@@@@@**@@@^**@**@@@@@"
    );
    println!(
        "@@@*^*^^^^^^^ aaaa^*^*uai^^@@@@@@**@@@@***@@@@**@@@**@@@@@ @@@**@@@**@@@@@**@@^**@@@@***@@@@****@@@@@@"
    );
    println!(
        "@@@@^^^** .aaaan ^^^^^^+^^@@@@@@@**@@@@@*@@@@@**@@@@^*****@@@@**@@@@******@@@@@@*****@**@@@@@**@@@@@@@"
    );
    println!(
        "@@@@aaua~   ^^^^^^^^* ^^^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ **@@@@@@@"
    );
    println!(
        "@@@@@@@@^^^^*@@@@;^^^^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@***@@@@@@@@@"
    );
    println!(
        "@@@@@@@@@@@@^^^^^^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    );
    println!(
        "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    );
}
